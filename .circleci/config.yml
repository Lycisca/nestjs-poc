version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  test: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/nestjs-poc # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:10.12.0 # ...with this image as the primary container; this is where all `steps` will run
        environment:
          NODE_ENV: test
    #   - image: mongo:3.4.4 # and this image as the secondary service container
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      # - run:
      #     name: update-npm
      #     command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install npm packages
          command: sudo npm ci
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Linter
          command: sudo npm run lint
      - run:
          name: Setup database
          command: NODE_ENV=test npx sequelize db:migrate
      - run:
          name: Unit test
          command: npm test
      - run:
          name: End to end test
          command: npm run test:e2e
      - store_artifacts:
          path: coverage
          prefix: coverage
      - run:
          name: prepare test-results
          command: mkdir -p test-results/jest && cp junit.xml test-results/jest/results.xml
      - store_test_results: # special step to upload test results for display in Test Summary
          path: test-results
  production_build:
    machine: true
    # docker:
    #   - image: circleci/golang # (1)
    # working_directory: ~/nestjs-poc # directory where steps will run
    steps:
      - checkout # special step to check out source code to working directory
      #   - setup_remote_docker:
      #       docker_layer_caching: true
      - run:
          name: Docker build production image
          command: docker build -t nestpoc .
    # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples

workflows:
  version: 2
  build_and_test:
    jobs:
      - test
      - production_build
# try caching layers
